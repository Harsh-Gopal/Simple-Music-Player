from scipy.optimize import linprog

# Define investment amounts as decision variables
x = [0, 0, 0]  # x[0] = investment in Asset X, x[1] = investment in Asset Y, x[2] = investment in Asset Z

# Define expected returns
expected_returns = [0.1, 0.12, 0.15]  # Expected return for each asset

# Define constraints (inequalities)
A_ub = [[1, 0, 0], [0, 1, 0], [0, 0, 1], [-1, 0, 0], [0, -1, 0], [0, 0, -1]]
b_ub = [300000, 200000, 100000, -600000, -400000, -300000]  # Upper bounds for investments

# Define objective function (maximize expected return)
c = expected_returns

# Total investment constraint (equality)
A_eq = [[1, 1, 1]]
b_eq = [1000000]  # Total investment amount

# Solve the linear programming problem
res = linprog(c, A_ub=A_ub, b_ub=b_ub, A_eq=A_eq, b_eq=b_eq)

# Print the optimal investment amounts and expected return
if res.success:
    print("Optimal investment amounts:")
    print(f"Asset X: ${res.x[0]:,.2f}")
    print(f"Asset Y: ${res.x[1]:,.2f}")
    print(f"Asset Z: ${res.x[2]:,.2f}")
    print(f"\nExpected return: {res.fun:.4%}")
else:
    print("An optimal solution could not be found.")
